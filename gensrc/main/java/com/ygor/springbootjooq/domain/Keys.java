/*
 * This file is generated by jOOQ.
 */
package com.ygor.springbootjooq.domain;


import com.ygor.springbootjooq.domain.tables.Comments;
import com.ygor.springbootjooq.domain.tables.Posts;
import com.ygor.springbootjooq.domain.tables.records.CommentsRecord;
import com.ygor.springbootjooq.domain.tables.records.PostsRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = Identities0.IDENTITY_COMMENTS;
    public static final Identity<PostsRecord, Integer> IDENTITY_POSTS = Identities0.IDENTITY_POSTS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CommentsRecord> COMMENTS_PKEY = UniqueKeys0.COMMENTS_PKEY;
    public static final UniqueKey<PostsRecord> POSTS_PKEY = UniqueKeys0.POSTS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CommentsRecord, PostsRecord> COMMENTS__COMMENTS_POST_ID_FKEY = ForeignKeys0.COMMENTS__COMMENTS_POST_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = Internal.createIdentity(Comments.COMMENTS, Comments.COMMENTS.ID);
        public static Identity<PostsRecord, Integer> IDENTITY_POSTS = Internal.createIdentity(Posts.POSTS, Posts.POSTS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CommentsRecord> COMMENTS_PKEY = Internal.createUniqueKey(Comments.COMMENTS, "comments_pkey", Comments.COMMENTS.ID);
        public static final UniqueKey<PostsRecord> POSTS_PKEY = Internal.createUniqueKey(Posts.POSTS, "posts_pkey", Posts.POSTS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CommentsRecord, PostsRecord> COMMENTS__COMMENTS_POST_ID_FKEY = Internal.createForeignKey(com.ygor.springbootjooq.domain.Keys.POSTS_PKEY, Comments.COMMENTS, "comments__comments_post_id_fkey", Comments.COMMENTS.POST_ID);
    }
}
